{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhernandez/Documents/submit-weeklychallenges-r2h-2019-emilyhm/week9/ecommerce-react/src/Components/Contact/form/form.jsx\";\nimport React from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\nimport FormErrors from \"./FormErrors\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: '',\n      email: '',\n      formErrors: {\n        fullName: '',\n        email: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n  }\n\n  handleUserInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    }, () => {\n      this.validateField(name, value);\n    });\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let fullNameValid = this.state.fullNameValid;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case 'fullName':\n        fullNameValid = value.length >= 3;\n        fieldValidationErrors.fullName = fullNameValid ? '' : ' is too short';\n        break;\n\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      fullNameValid: fullNameValid,\n      emailValid: emailValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.fullNameValid && this.state.emailValid\n    });\n  } ///////////////////////\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form demoForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"\",\n      action: \"#\",\n      method: \"POST\",\n      name: \"contact_us\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Say Hello!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Give us feedback, or just say hello. Send us a message and we'll be glad to see it, or just drop your email!\"), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"fullName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Full Name: \"), React.createElement(\"input\", {\n      id: \"fullName\",\n      type: \"text\",\n      name: \"full name\",\n      value: this.state.fullName,\n      onChange: event => this.handleUserInput(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: event => this.handleUserInput(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"box comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"response\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Anything you want to tell us?\"), React.createElement(\"textarea\", {\n      id: \"response\",\n      name: \"comments\",\n      rows: \"10\",\n      cols: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-light btn-sm waves-effect waves-light\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/emilyhernandez/Documents/submit-weeklychallenges-r2h-2019-emilyhm/week9/ecommerce-react/src/Components/Contact/form/form.jsx"],"names":["React","FormErrors","Form","Component","constructor","props","state","fullName","email","formErrors","emailValid","passwordValid","formValid","handleUserInput","e","name","target","value","setState","validateField","fieldName","fieldValidationErrors","fullNameValid","length","match","validateForm","render","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\nimport FormErrors from \"./FormErrors\";\n\nclass Form extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n          fullName: '',\n          email: '',\n          formErrors: {fullName: '', email: ''},\n          emailValid: false,\n          passwordValid: false,\n          formValid: false\n        }\n      }\n\n      handleUserInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value},\n        () => { this.validateField(name, value) });\n      }\n\n      validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let fullNameValid = this.state.fullNameValid;\n        let emailValid = this.state.emailValid;\n      \n        switch(fieldName) {\n          case 'fullName':\n            fullNameValid = value.length >= 3;\n            fieldValidationErrors.fullName = fullNameValid ? '': ' is too short';\n            break;\n          case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n          default:\n            break;\n        }\n        this.setState({\n          formErrors: fieldValidationErrors,\n          fullNameValid: fullNameValid,\n          emailValid: emailValid\n          }, this.validateForm);\n      }\n      \n      validateForm() {\n        this.setState({formValid: this.state.fullNameValid && this.state.emailValid});\n      }\n\n\n///////////////////////\n    render() \n    {\n        return(\n            <div className=\"form demoForm\">\n            <form className=\"\" action=\"#\" method=\"POST\" name=\"contact_us\">\n              <fieldset>\n                <legend id=\"title\">Say Hello!</legend>\n                <p>Give us feedback, or just say hello. Send us a message and we'll be glad to see it, or just drop your email!</p>\n        \n                <div className=\"box\">\n                  <label htmlfor=\"fullName\">Full Name: </label> \n                  <input id=\"fullName\" type=\"text\" name=\"full name\" value={this.state.fullName} onChange={(event) => this.handleUserInput(event)}/> \n                  <div className='panel panel-default'>\n                  <FormErrors formErrors={this.state.formErrors} />\n                  </div>\n                </div>\n                \n                <div className=\"box\">\n                  <label htmlfor=\"email\">Email: </label>\n                  <input id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={(event) => this.handleUserInput(event)}/>\n                </div>\n        \n              \n        \n                <div className=\"box comment\">\n                  <label htmlfor=\"response\">Anything you want to tell us?</label> \n                  <textarea id=\"response\" name=\"comments\" rows=\"10\" cols=\"30\"></textarea>\n                </div>\n        \n                <div className=\"submit\">\n                  <button className=\"btn btn-light btn-sm waves-effect waves-light\" type=\"submit\">Submit</button>\n                </div>\n\n              </fieldset> \n            </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Form "]},"metadata":{},"sourceType":"module"}