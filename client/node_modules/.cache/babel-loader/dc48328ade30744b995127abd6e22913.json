{"ast":null,"code":"import _defineProperty from \"/Users/emilyhernandez/Documents/storygear-phase5/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/emilyhernandez/Documents/storygear-phase5/client/src/Components/SignUp/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport httpClient from '../../httpClient';\nimport './signup.css'; // sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        email: \"\",\n        username: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  // the information is displaying in the input fields\n  onInputChange(e) {\n    console.log('hello');\n    this.setState({\n      fields: _objectSpread({}, this.state.fields, {\n        [e.target.name]: e.target.value\n      })\n    });\n  }\n\n  //when you submit the form, the function signup is called and then the user param is passed \n  onFormSubmit(e) {\n    e.preventDefault();\n    httpClient.signUp(this.state.fields).then(user => {\n      console.log('I WORK!!!');\n      this.setState({\n        fields: {\n          email: \"\",\n          username: \"\",\n          password: \"\"\n        }\n      });\n\n      if (user) {\n        this.props.onSignUpSuccess(user); //this takes the user to a different page, mainly the home page\n\n        this.props.history.push('/products');\n      }\n\n      ;\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state$fields = this.state.fields,\n          email = _this$state$fields.email,\n          username = _this$state$fields.username,\n          password = _this$state$fields.password;\n    return React.createElement(\"form\", {\n      onChange: this.onInputChange.bind(this),\n      onSubmit: this.onFormSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Hello, Sign Up now!\"), \"Please enter an email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Please create a username:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"Please create a password:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign Up!\")));\n  }\n\n}\n\n;\nexport default SignUp;","map":{"version":3,"sources":["/Users/emilyhernandez/Documents/storygear-phase5/client/src/Components/SignUp/index.jsx"],"names":["React","httpClient","SignUp","Component","state","fields","email","username","password","onInputChange","e","console","log","setState","target","name","value","onFormSubmit","preventDefault","signUp","then","user","props","onSignUpSuccess","history","push","catch","err","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport httpClient from '../../httpClient';\nimport './signup.css';\n\n// sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\nclass SignUp extends React.Component {\n    state = {\n        fields: { \n            email: \"\",\n            username: \"\",\n            password: \"\"\n        }\n    };\n\n    // the information is displaying in the input fields\n    onInputChange(e) {\n        console.log('hello')\n        this.setState({\n            fields: {\n                // THIS NAME IS NOT THE SAME AS THE NAME FROM STATE!!!\n                ...this.state.fields, \n                [e.target.name]: e.target.value\n            }\n        });\n    };\n\n    //when you submit the form, the function signup is called and then the user param is passed \n    onFormSubmit(e) {\n        e.preventDefault()\n        httpClient.signUp(this.state.fields)\n        .then(user => {\n            console.log('I WORK!!!')\n            this.setState({ fields: {\n                email: \"\",\n                username: \"\",\n                password: \"\"\n                }\n            })\n\n            if(user) {\n                this.props.onSignUpSuccess(user)\n                //this takes the user to a different page, mainly the home page\n                this.props.history.push('/products');\n            };\n        })\n        .catch(err => console.log(err))\n    };\n\n\n    render() {\n        const { email, username, password } = this.state.fields\n\n        return (\n            <form onChange={this.onInputChange.bind(this)} onSubmit={this.onFormSubmit.bind(this)}>\n                <legend>\n                    <h1>Hello, Sign Up now!</h1>\n\n                    Please enter an email:\n                    <br />\n                    <input type=\"text\" name=\"email\" value={email}/>\n\n                    <br />\n\n                    Please create a username:\n                    <br />\n                    <input type=\"text\"  name=\"username\" value={username}/>\n\n                    <br/>\n\n                    Please create a password:\n                    <br />\n                    <input type=\"password\" name=\"password\" value={password}/>\n\n                    <br/>\n\n                    <button type=\"submit\">Sign Up!</button>\n\n                </legend>\n            </form>\n        );\n    };\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}