{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhernandez/Documents/submit-weeklychallenges-r2h-2019-emilyhm/week9/ecommerce-react/src/Components/Contact/form/form.jsx\";\nimport React from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\nimport FormErrors from \"./FormErrors\";\n\nclass Form extends React.Component {\n  // constructor (props) {\n  //     super(props);\n  //     this.state = {\n  //       fullName: '',\n  //       email: '',\n  //       formErrors: {fullName: '', email: ''},\n  //       fullNameValid: false,\n  //       emailValid: false,\n  //       formValid: false\n  //     }\n  //   }\n  //   handleUserInput (e) {\n  //     const name = e.target.name;\n  //     const value = e.target.value;\n  //     this.setState({[name]: value},\n  //     () => { this.validateField(name, value) });\n  //   }\n  //   validateField(fieldName, value) {\n  //     let fieldValidationErrors = this.state.formErrors;\n  //     let fullNameValid = this.state.fullNameValid;\n  //     let emailValid = this.state.emailValid;\n  //     switch(fieldName) {\n  //       case 'fullName':\n  //         fullNameValid = value.length >= 0;\n  //         fieldValidationErrors.fullName = fullNameValid ? '': ' is required';\n  //         break;\n  //       case 'email':\n  //         emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n  //         fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n  //         break;\n  //       default:\n  //         break;\n  //     }\n  //     this.setState({\n  //       formErrors: fieldValidationErrors,\n  //       fullNameValid: fullNameValid,\n  //       emailValid: emailValid\n  //       }, this.validateForm);\n  //   }\n  //   validateForm() {\n  //     this.setState({formValid: this.state.fullNameValid && this.state.emailValid});\n  //   }\n  ///////////////////////\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form demoForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"\",\n      action: \"#\",\n      method: \"POST\",\n      name: \"contact_us\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Say Hello!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Give us feedback, or just say hello. Send us a message and we'll be glad to see it, or just drop your email!\"), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"fullName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Full Name: \"), React.createElement(\"input\", {\n      id: \"fullName\",\n      type: \"text\",\n      name: \"full name\",\n      value: this.state.fullName,\n      onChange: event => this.handleUserInput(event),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: event => this.handleUserInput(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"box comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlfor: \"response\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Anything you want to tell us?\"), React.createElement(\"textarea\", {\n      id: \"response\",\n      name: \"comments\",\n      rows: \"10\",\n      cols: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-light btn-sm waves-effect waves-light\",\n      disabled: !this.state.formValid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/emilyhernandez/Documents/submit-weeklychallenges-r2h-2019-emilyhm/week9/ecommerce-react/src/Components/Contact/form/form.jsx"],"names":["React","FormErrors","Form","Component","render","state","fullName","event","handleUserInput","formErrors","email","formValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\nimport FormErrors from \"./FormErrors\";\n\nclass Form extends React.Component {\n    // constructor (props) {\n    //     super(props);\n    //     this.state = {\n    //       fullName: '',\n    //       email: '',\n    //       formErrors: {fullName: '', email: ''},\n    //       fullNameValid: false,\n    //       emailValid: false,\n    //       formValid: false\n    //     }\n    //   }\n\n    //   handleUserInput (e) {\n    //     const name = e.target.name;\n    //     const value = e.target.value;\n    //     this.setState({[name]: value},\n    //     () => { this.validateField(name, value) });\n    //   }\n\n    //   validateField(fieldName, value) {\n    //     let fieldValidationErrors = this.state.formErrors;\n    //     let fullNameValid = this.state.fullNameValid;\n    //     let emailValid = this.state.emailValid;\n      \n    //     switch(fieldName) {\n    //       case 'fullName':\n    //         fullNameValid = value.length >= 0;\n    //         fieldValidationErrors.fullName = fullNameValid ? '': ' is required';\n    //         break;\n    //       case 'email':\n    //         emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    //         fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n    //         break;\n    //       default:\n    //         break;\n    //     }\n    //     this.setState({\n    //       formErrors: fieldValidationErrors,\n    //       fullNameValid: fullNameValid,\n    //       emailValid: emailValid\n    //       }, this.validateForm);\n    //   }\n      \n    //   validateForm() {\n    //     this.setState({formValid: this.state.fullNameValid && this.state.emailValid});\n    //   }\n\n\n///////////////////////\n    render() \n    {\n        return(\n            <div className=\"form demoForm\">\n            <form className=\"\" action=\"#\" method=\"POST\" name=\"contact_us\">\n              <fieldset>\n                <legend id=\"title\">Say Hello!</legend>\n                <p>Give us feedback, or just say hello. Send us a message and we'll be glad to see it, or just drop your email!</p>\n        \n                <div className=\"box\">\n                  <label htmlfor=\"fullName\">Full Name: </label> \n                  <input id=\"fullName\" type=\"text\" name=\"full name\" value={this.state.fullName} onChange={(event) => this.handleUserInput(event)} required/> \n                  <div className='panel panel-default'>\n                  <FormErrors formErrors={this.state.formErrors} />\n                  </div>\n                </div>\n                \n                <div className=\"box\">\n                  <label htmlfor=\"email\">Email: </label>\n                  <input id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={(event) => this.handleUserInput(event)}/>\n                  <div className='panel panel-default'>\n                  <FormErrors formErrors={this.state.formErrors} />\n                  </div>\n                </div>\n        \n              \n        \n                <div className=\"box comment\">\n                  <label htmlfor=\"response\">Anything you want to tell us?</label> \n                  <textarea id=\"response\" name=\"comments\" rows=\"10\" cols=\"30\"></textarea>\n                </div>\n        \n                <div className=\"submit\">\n                  <button className=\"btn btn-light btn-sm waves-effect waves-light\" disabled={!this.state.formValid} type=\"submit\">Submit</button>\n                </div>\n\n              </fieldset> \n            </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Form "]},"metadata":{},"sourceType":"module"}