{"ast":null,"code":"var _jsxFileName = \"/Users/emilyhernandez/Documents/story-gear-ecommerce/client/src/Components/Products/index.jsx\";\nimport React from 'react'; // import product from './products.json';\n\nimport ListProducts from './ListProducts';\nimport { withRouter } from 'react-router-dom';\nimport './index.css';\n\nclass Products extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //category in MySQL\n      type: \"\",\n      //monetary_value in MySQL\n      price: \"\",\n      filteredProducts: [],\n      products: null\n    };\n    this.type = React.createRef();\n    this.price = React.createRef();\n\n    this.handleProductChange = e => {\n      this.setState({\n        type: this.type.current.value\n      });\n    };\n\n    this.handlePriceChange = e => {\n      console.log('price changed');\n      this.setState({\n        price: this.price.current.value\n      });\n    };\n  }\n\n  fetchContent() {\n    const _this$state = this.state,\n          type = _this$state.type,\n          price = _this$state.price;\n    let dataURL = '/api/products';\n\n    if (type) {\n      dataURL += \"/type/\".concat(type); // dataURL = dataURL + `/type/${type}`\n    } else {\n      dataURL += \"/type/all\";\n    }\n\n    if (price) {\n      dataURL += \"/price/\".concat(price);\n    } else {\n      dataURL += \"/price/all\";\n    }\n\n    fetch(dataURL).then(res => res.json()).then(items => {\n      this.setState({\n        products: items\n      }); // console.log(this.state.products)\n    });\n  }\n\n  componentDidMount() {\n    //get function fetch if \n    const _this$props$match$par = this.props.match.params,\n          type = _this$props$match$par.type,\n          price = _this$props$match$par.price;\n    this.setState({\n      type: type,\n      price: price\n    }); // this.fetchContent()\n  }\n\n  componentDidUpdate(oldProps, oldState) {\n    console.log('componentDidUpdate', this.state, oldState);\n\n    if (this.state.type !== oldState.type || this.state.price !== oldState.price) {\n      this.fetchContent();\n    } // make an if for price and category if they changed in state by comparing using prev.props\n\n  }\n\n  render() {\n    // let results = [];\n    // results.push(<ListProducts title={prod.title} image={prod.image} alt={prod.alt} price={prod.price} description={prod.description}/>);\n    const productResults = this.state.products; //this sets it up so that if there's no data to work with in the beginning, it checks to see if there is data. you will always be null when you start the server and wait for the data to come back \n    // const products = (productResults !== null) \n    //     ? productResults \n    //     : \"fail\"\n    //let = mapProducts because of scoping, so that it can be accessed \n\n    let mapProducts = []; //if productsResults exists, then map through the things and reassign their names so that they can go in their respective spots\n\n    if (productResults !== null) {\n      console.log(productResults);\n      mapProducts = productResults.map(({\n        product_name: title,\n        product_image: image,\n        product_alt_desc: alt,\n        item_description: description,\n        price\n      }) => {\n        return React.createElement(ListProducts, {\n          product: {\n            title,\n            image,\n            alt,\n            description,\n            price\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n      });\n    }\n\n    console.log(mapProducts);\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"slogan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Tell Us A Story.\")), React.createElement(\"form\", {\n      className: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      ref: this.type,\n      onChange: this.handleProductChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"All Products\"), React.createElement(\"option\", {\n      value: \"cameras\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Cameras\"), React.createElement(\"option\", {\n      value: \"lens\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Lens\"), React.createElement(\"option\", {\n      value: \"tripods\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Tripods\"), React.createElement(\"option\", {\n      value: \"lights\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Lights\"), React.createElement(\"option\", {\n      value: \"camera-bags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Camera Bags\"), React.createElement(\"option\", {\n      value: \"storage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Storage\")), React.createElement(\"select\", {\n      ref: this.price,\n      onChange: this.handlePriceChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"All Prices\"), React.createElement(\"option\", {\n      value: \"low\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Low\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"high\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"High\"))), productResults && mapProducts, productResults == null && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\\"Please wait, the page is loading\\\"\"));\n  }\n\n}\n\nexport default withRouter(Products);","map":{"version":3,"sources":["/Users/emilyhernandez/Documents/story-gear-ecommerce/client/src/Components/Products/index.jsx"],"names":["React","ListProducts","withRouter","Products","Component","state","type","price","filteredProducts","products","createRef","handleProductChange","e","setState","current","value","handlePriceChange","console","log","fetchContent","dataURL","fetch","then","res","json","items","componentDidMount","props","match","params","componentDidUpdate","oldProps","oldState","render","productResults","mapProducts","map","product_name","title","product_image","image","product_alt_desc","alt","item_description","description"],"mappings":"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","sourcesContent":["import React from 'react';\n// import product from './products.json';\nimport ListProducts from './ListProducts';\nimport {withRouter} from 'react-router-dom';\nimport './index.css';\n\nclass Products extends React.Component {\n  state = {\n      //category in MySQL\n      type: \"\",\n      //monetary_value in MySQL\n      price: \"\",\n      filteredProducts: [],\n      products: null,\n    }\n\n  type = React.createRef();\n  price = React.createRef();\n\n  fetchContent() {\n    const {type, price} = this.state\n    let dataURL = '/api/products'\n    if (type) {\n      dataURL += `/type/${type}`\n      // dataURL = dataURL + `/type/${type}`\n    } else {\n      dataURL += `/type/all`\n    }\n    if (price) {\n      dataURL += `/price/${price}`\n    } else {\n      dataURL += `/price/all`\n    }\n\n    fetch(dataURL)\n    .then(res => res.json())\n    .then(items => {\n      this.setState({\n        products: items\n      })\n      // console.log(this.state.products)\n    })\n  }\n\n  componentDidMount() {\n    //get function fetch if \n    const {type, price} = this.props.match.params;\n    this.setState({\n      type: type,\n      price: price\n    })\n    // this.fetchContent()\n  };\n\n  componentDidUpdate(oldProps, oldState) {\n    console.log('componentDidUpdate', this.state, oldState)\n    if (this.state.type !== oldState.type || this.state.price !== oldState.price) {\n      this.fetchContent()\n    }\n    // make an if for price and category if they changed in state by comparing using prev.props\n  }\n\n\n\n  handleProductChange = (e) => {\n    this.setState({\n      type: this.type.current.value\n    })\n  };\n\n  handlePriceChange = (e) => {\n    console.log('price changed')\n    this.setState({\n      price: this.price.current.value\n    })\n  }\n\n\n  render() {\n      // let results = [];\n      // results.push(<ListProducts title={prod.title} image={prod.image} alt={prod.alt} price={prod.price} description={prod.description}/>);\n\n      const productResults = this.state.products\n      //this sets it up so that if there's no data to work with in the beginning, it checks to see if there is data. you will always be null when you start the server and wait for the data to come back \n      // const products = (productResults !== null) \n      //     ? productResults \n      //     : \"fail\"\n\n      //let = mapProducts because of scoping, so that it can be accessed \n      let mapProducts = []\n\n      //if productsResults exists, then map through the things and reassign their names so that they can go in their respective spots\n      if (productResults !== null) {\n        console.log(productResults)\n\n         mapProducts = productResults.map((\n           {\n             product_name: title,\n             product_image: image,\n             product_alt_desc: alt,\n             item_description: description,\n             price,\n            }) => {\n          return <ListProducts \n                  product={{title, image, alt, description, price}}\n                  />\n        });\n      }\n      console.log(mapProducts)\n\n\n    return (\n      <div className=\"main\"> \n       <div className=\"desktop\">\n          <p id=\"slogan\">Tell Us A Story.</p>\n        </div>\n\n       <form className=\"filter\">\n         <select ref={this.type} onChange= {this.handleProductChange}>\n          <option value=\"all\">All Products</option>\n          <option value=\"cameras\">Cameras</option>\n          <option value=\"lens\">Lens</option>\n          <option value=\"tripods\">Tripods</option>\n          <option value=\"lights\">Lights</option>\n          <option value=\"camera-bags\">Camera Bags</option>\n          <option value=\"storage\">Storage</option>\n        </select>\n        <select ref={this.price} onChange= {this.handlePriceChange}>\n          <option value=\"all\">All Prices</option>\n          <option value=\"low\">Low</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n       </form>\n    \n      {productResults && mapProducts}\n\n      {productResults == null && \n        <p>\"Please wait, the page is loading\"</p>\n      }\n      </div>\n      \n    );\n  }\n    \n}\n\nexport default withRouter(Products);"]},"metadata":{},"sourceType":"module"}