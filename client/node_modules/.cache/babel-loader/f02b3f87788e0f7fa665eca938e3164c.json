{"ast":null,"code":"import _defineProperty from \"/Users/emilyhernandez/Documents/storygear-phase5/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/emilyhernandez/Documents/storygear-phase5/client/src/Components/SignUp/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport httpClient from '../../httpClient';\nimport './signup.css'; // sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // fields: { \n      email: \"\",\n      username: \"\",\n      password: \"\" // }\n\n    };\n  }\n\n  // the information is displaying in the input fields\n  onInputChange(e) {\n    console.log('hello');\n    this.setState({\n      fields: _objectSpread({}, this.state.fields, {\n        [e.target.name]: e.target.value\n      })\n    });\n  }\n\n  //when you submit the form, the function signup is called and then the user param is passed \n  onFormSubmit(e) {\n    e.preventDefault();\n    httpClient.signUp(this.state.fields).then(user => {\n      console.log('hello i work');\n      this.setState({\n        // fields: {\n        email: \"\",\n        username: \"\",\n        password: \"\" // }\n\n      });\n      console.log(this.state.fields);\n      console.log(user);\n\n      if (user) {\n        console.log('I WORK!!!');\n        this.props.onSignUpSuccess(user); //this takes the user to a different page, mainly the home page\n\n        this.props.history.push('/products');\n      }\n\n      ;\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          username = _this$state.username,\n          password = _this$state.password; // .fields\n\n    return React.createElement(\"form\", {\n      onChange: this.onInputChange.bind(this),\n      onSubmit: this.onFormSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Hello, Sign Up now!\"), \"Please enter an email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"Please create a username:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \"Please create a password:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Sign Up!\")));\n  }\n\n}\n\n;\nexport default SignUp;","map":{"version":3,"sources":["/Users/emilyhernandez/Documents/storygear-phase5/client/src/Components/SignUp/index.jsx"],"names":["React","httpClient","SignUp","Component","state","email","username","password","onInputChange","e","console","log","setState","fields","target","name","value","onFormSubmit","preventDefault","signUp","then","user","props","onSignUpSuccess","history","push","catch","err","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport httpClient from '../../httpClient';\nimport './signup.css';\n\n// sign up form behaves almost identically to log in form. We could create a flexible Form component to use for both actions, but for now we'll separate the two:\nclass SignUp extends React.Component {\n    state = {\n        // fields: { \n            email: \"\",\n            username: \"\",\n            password: \"\"\n        // }\n    };\n\n    // the information is displaying in the input fields\n    onInputChange(e) {\n        console.log('hello')\n        this.setState({\n            fields: {\n                // THIS NAME IS NOT THE SAME AS THE NAME FROM STATE!!!\n                ...this.state.fields, \n                [e.target.name]: e.target.value\n            }\n        });\n    };\n\n    //when you submit the form, the function signup is called and then the user param is passed \n    onFormSubmit(e) {\n        e.preventDefault()\n        httpClient.signUp(this.state.fields)\n        .then(user => {\n            console.log('hello i work')\n            this.setState({ \n                // fields: {\n                email: \"\",\n                username: \"\",\n                password: \"\"\n            // }\n        })\n        console.log(this.state.fields)\n        console.log(user)\n            if(user) {\n                console.log('I WORK!!!')\n\n\n                this.props.onSignUpSuccess(user)\n                //this takes the user to a different page, mainly the home page\n                this.props.history.push('/products');\n            };\n        })\n        .catch(err => console.log(err))\n    };\n\n\n    render() {\n        const { email, username, password } = this.state\n        // .fields\n\n        return (\n            <form onChange={this.onInputChange.bind(this)} onSubmit={this.onFormSubmit.bind(this)}>\n                <legend>\n                    <h1>Hello, Sign Up now!</h1>\n\n                    Please enter an email:\n                    <br />\n                    <input type=\"text\" name=\"email\" value={email}/>\n\n                    <br />\n\n                    Please create a username:\n                    <br />\n                    <input type=\"text\"  name=\"username\" value={username}/>\n\n                    <br/>\n\n                    Please create a password:\n                    <br />\n                    <input type=\"password\" name=\"password\" value={password}/>\n\n                    <br/>\n\n                    <button type=\"submit\">Sign Up!</button>\n\n                </legend>\n            </form>\n        );\n    };\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}